
pluginManagement {
    repositories {
        mavenLocal()
        gradlePluginPortal()
    }

    final File versionFile = new File(rootDir.parentFile, "plugins/version.txt")
    final String pluginsVersion = versionFile.readLines().first()
    plugins {
        id("de.fayard.refreshVersions").version(pluginsVersion)
    }
}

plugins {
    id("com.gradle.enterprise").version("3.1.1")
////                        # available:"3.2")
////                        # available:"3.2.1")
////                        # available:"3.3")
////                        # available:"3.3.1")
////                        # available:"3.3.2")
////                        # available:"3.3.3")
////                        # available:"3.3.4")
////                        # available:"3.4")
////                        # available:"3.4.1")
////                        # available:"3.5")
////                        # available:"3.5.1")
////                        # available:"3.5.2")
////                        # available:"3.6")
////                        # available:"3.6.1")
    id 'de.fayard.refreshVersions'
}

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

rootProject.name = 'sample-groovy'

refreshVersions {
    featureFlags {
        enable 'LIBS'
        disable 'GRADLE_UPDATES'
    }

    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { keyword -> version.toUpperCase().contains(keyword) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }

    // Reject unstable versions unless the current version is also unstable
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }

}
